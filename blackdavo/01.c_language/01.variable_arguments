20180803_01
-참고 URL
http://jangsalt.tistory.com/entry/%EA%B0%80%EB%B3%80-%EC%9D%B8%EC%88%98-vastart-vaend-vaarg-valist
http://norux.me/19

- 가변인자의 대표적인 예
int printf(const char* format, ...) 워후

- 가변인자
가변 인자란 말 그대로 인자의 개수와 타입이 미리 정해져 있지 않다는 뜻
가변 인자를 사용하는 함수를 가변인자 함수라고 한다.
printf 함수 두번째 인자로 사용되는 ...를 소스 상에서 가변 인자 혹인 가변 파라미터라 한다.

- 가변인자 함수 만들기
stdarg.h 헤더 파일 인클루드 <-- 가변인자 함수 만들기 위한 각종 매크로들이 정의되어 있음
** 최소 1개의 고정 인자가 있어야 함
가변인자를 뜻하는 ...은 함수 인자들중에서 가장 뒤쪽에 있어야 함 >_<

-가변인자 함수 예제 
'''
int sum(int count, ...)
{
    int res = 0;
    va_list ap;
    int i;

    va_start(ap, count);
    
    for(i=0; i<count; i++)
        res += va_arg(ap, int);

    va_end(ap);

    return res;
}

int main()
{
    printf("%d\n", sum(10, 1,2,3,4,5,6,7,8,9,10));

    return 0;
}
'''

출력결과 :55 ~_~

- 소스 설명
va_list : 각 가변 인자의 시작 주소를 가리킬 포인터 (내부적으로는 char *로 정의돼있다 함)
va_start : va_list로 만들어진 포인터에게 가변인자 중 첫 번째 인자의 주소를 가르쳐줌 (존나 중요)
	#define va_start(ap, v)  ( (ap) = (va_list)_ADDRESSOF(v) + _INTSIZEOF(v) )
		ap : va_list로 만든 포인터가 담김
		v : 마지막 고정인수가 담김
		_ADDRESSOF(v) : &v 형식 (주소)로 바꿔주는 매크로
		_INTSIZEOF(v) : ((sizeof(v) + sizeof(int) - 1) & ~(sizeof(int) - 1))
						마지막 고정인자의 사이즈를 구하고 다음 가변인자의 시작주소까지 메모리상 거리를 구함

va_arg(ap, v) : va_list 의 포인터를 다음 가변인자로 이동시켜주는 매크로
	#define va_arg(ap,t)    ( *(t *)((ap += _INTSIZEOF(t)) - _INTSIZEOF
va_end(ap, v) : 사용한 가변인자 변수를 끝낼 때 사용, NULL 포인터로 돌려주는 매크로
	#define va_end(ap)      ( ap = (va_list)0 )

- vsprintf/vnsprintf

필요 헤더 : stdio.h
int vsprintf(char* dest, const char* format, va_list args)
int vsnprintf(char* dest, size_t maxCount, const char* format, va_list args)

파라미터
	dest: format에 따라 만들어진 내용이 담길 버퍼
	format: 포맷
	args: 가변 파라미터
	리턴값: 문자열의 길이

- vsprintf 예제
'''
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

void errorPrintf(char* fmt, ...)
{
    char buf[512] = {0,};
    va_list ap;

    strcpy(buf, "[ERROR] ");
    va_start(ap, fmt);
    vsprintf(buf + strlen(buf), fmt, ap);
    va_end(ap);

    puts(buf);
}

int main()
{
    int a = 10, b = 0;

    if(b != 0)
        printf("%d\n", a / b);
    else
        errorPrintf("Don't divide by %d\n", b);

    return 0;
}
'''

출력결과 : [ERROR] Don't divide by 0

















